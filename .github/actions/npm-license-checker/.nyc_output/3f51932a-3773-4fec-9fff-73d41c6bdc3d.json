{"/Users/trevorhuey/code/internal-actions-public/.github/actions/npm-license-checker/src/checkLicenses.ts":{"path":"/Users/trevorhuey/code/internal-actions-public/.github/actions/npm-license-checker/src/checkLicenses.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"3":{"start":{"line":6,"column":173},"end":{"line":6,"column":180}},"4":{"start":{"line":7,"column":4},"end":{"line":29,"column":7}},"5":{"start":{"line":8,"column":8},"end":{"line":28,"column":11}},"6":{"start":{"line":22,"column":12},"end":{"line":27,"column":13}},"7":{"start":{"line":23,"column":16},"end":{"line":23,"column":28}},"8":{"start":{"line":26,"column":16},"end":{"line":26,"column":34}}},"fnMap":{"0":{"name":"checkLicenses","decl":{"start":{"line":5,"column":15},"end":{"line":5,"column":28}},"loc":{"start":{"line":5,"column":54},"end":{"line":30,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":23},"end":{"line":7,"column":24}},"loc":{"start":{"line":7,"column":44},"end":{"line":29,"column":5}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":11},"end":{"line":21,"column":12}},"loc":{"start":{"line":21,"column":30},"end":{"line":28,"column":9}},"line":21}},"branchMap":{"0":{"loc":{"start":{"line":22,"column":12},"end":{"line":27,"column":13}},"type":"if","locations":[{"start":{"line":22,"column":12},"end":{"line":27,"column":13}},{"start":{"line":25,"column":17},"end":{"line":27,"column":13}}],"line":22}},"s":{"0":1,"1":1,"2":1,"3":5,"4":5,"5":5,"6":5,"7":1,"8":4},"f":{"0":5,"1":5,"2":5},"b":{"0":[1,4]},"inputSourceMap":{"version":3,"file":"/Users/trevorhuey/code/internal-actions-public/.github/actions/npm-license-checker/src/checkLicenses.ts","sources":["/Users/trevorhuey/code/internal-actions-public/.github/actions/npm-license-checker/src/checkLicenses.ts"],"names":[],"mappings":";;AAEA,gCA0CC;AA5CD,mCAAiH;AAElG,KAAK,UAAU,aAAa,CACzC,cAA8B,EAC9B,OAA6B;IAE7B,MAAM,EACJ,cAAc,EACd,SAAS,EACT,YAAY,EACZ,SAAS,EACT,iBAAiB,EACjB,eAAe,EACf,2BAA2B,EAC3B,mBAAmB,EACnB,kBAAkB,EACnB,GAAG,OAAO,CAAC;IAEZ,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACrC,cAAc,CAAC,IAAI,CACjB;YACE,IAAI,EAAE,mBAAmB,KAAK,2BAAmB,CAAC,IAAI;YACtD,GAAG,EAAE,mBAAmB,KAAK,2BAAmB,CAAC,GAAG;YAEpD,QAAQ,EAAE,mBAAmB,KAAK,2BAAmB,CAAC,QAAQ;YAC9D,KAAK,EAAE,SAAS;YAChB,UAAU,EAAE,cAAc,KAAK,sBAAc,CAAC,UAAU;YACxD,WAAW,EAAE,cAAc,KAAK,sBAAc,CAAC,WAAW;YAC1D,GAAG,EAAE,iBAAiB;YACtB,SAAS;YACT,YAAY,EAAE,YAAY;YAC1B,eAAe;YACf,2BAA2B;YAC3B,kBAAkB,EAAE,kBAAkB;SACvC,EACD,CAAC,GAAG,EAAE,QAAQ,EAAE,EAAE;YAChB,IAAI,GAAG,EAAE,CAAC;gBACR,MAAM,CAAC,GAAG,CAAC,CAAC;YACd,CAAC;iBAAM,CAAC;gBACN,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpB,CAAC;QACH,CAAC,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["import { CheckLicensesOptions, DependencyType, DetailsOutputFormat, LicenseChecker, ModuleInfos } from './types';\n\nexport default async function checkLicenses(\n  licenseChecker: LicenseChecker,\n  options: CheckLicensesOptions\n): Promise<ModuleInfos> {\n  const {\n    dependencyType,\n    startPath,\n    customFields,\n    onlyAllow,\n    detailsOutputPath,\n    excludePackages,\n    excludePackagesStartingWith,\n    detailsOutputFormat,\n    clarificationsPath\n  } = options;\n\n  return new Promise((resolve, reject) => {\n    licenseChecker.init(\n      {\n        json: detailsOutputFormat === DetailsOutputFormat.JSON,\n        csv: detailsOutputFormat === DetailsOutputFormat.CSV,\n        // @ts-ignore\n        markdown: detailsOutputFormat === DetailsOutputFormat.Markdown,\n        start: startPath,\n        production: dependencyType === DependencyType.Production,\n        development: dependencyType === DependencyType.Development,\n        out: detailsOutputPath,\n        onlyAllow,\n        customFormat: customFields,\n        excludePackages,\n        excludePackagesStartingWith,\n        clarificationsFile: clarificationsPath\n      },\n      (err, packages) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(packages);\n        }\n      }\n    );\n  });\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"73f0c185468c02d5dc545115c6e47dfb60d26e98","contentHash":"e9426a2960238a69aa0fa73381d94f5c5061e2973e16ed986abca63803c3cd94"},"/Users/trevorhuey/code/internal-actions-public/.github/actions/npm-license-checker/src/types.ts":{"path":"/Users/trevorhuey/code/internal-actions-public/.github/actions/npm-license-checker/src/types.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":9,"column":69}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":50}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":34}},"6":{"start":{"line":11,"column":0},"end":{"line":15,"column":84}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":41}},"8":{"start":{"line":13,"column":4},"end":{"line":13,"column":39}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":49}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":27},"end":{"line":9,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":1},"end":{"line":11,"column":2}},"loc":{"start":{"line":11,"column":32},"end":{"line":15,"column":1}},"line":11}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":3},"end":{"line":9,"column":67}},"type":"binary-expr","locations":[{"start":{"line":9,"column":3},"end":{"line":9,"column":17}},{"start":{"line":9,"column":22},"end":{"line":9,"column":66}}],"line":9},"1":{"loc":{"start":{"line":15,"column":3},"end":{"line":15,"column":82}},"type":"binary-expr","locations":[{"start":{"line":15,"column":3},"end":{"line":15,"column":22}},{"start":{"line":15,"column":27},"end":{"line":15,"column":81}}],"line":15}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"f":{"0":1,"1":1},"b":{"0":[1,1],"1":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/trevorhuey/code/internal-actions-public/.github/actions/npm-license-checker/src/types.ts","sources":["/Users/trevorhuey/code/internal-actions-public/.github/actions/npm-license-checker/src/types.ts"],"names":[],"mappings":";;;AASA,IAAY,cAIX;AAJD,WAAY,cAAc;IACxB,2CAAyB,CAAA;IACzB,6CAA2B,CAAA;IAC3B,6BAAW,CAAA;AACb,CAAC,EAJW,cAAc,8BAAd,cAAc,QAIzB;AAED,IAAY,mBAIX;AAJD,WAAY,mBAAmB;IAC7B,oCAAa,CAAA;IACb,kCAAW,CAAA;IACX,4CAAqB,CAAA;AACvB,CAAC,EAJW,mBAAmB,mCAAnB,mBAAmB,QAI9B","sourcesContent":["import type core from '@actions/core';\nimport type licenseChecker from 'license-checker-rseidelsohn';\n\nexport type Core = Pick<typeof core, 'getInput' | 'info' | 'setFailed'>;\nexport type ModuleInfos = licenseChecker.ModuleInfos;\nexport type LicenseChecker = Pick<typeof licenseChecker, 'init'> & {\n  asSummary: (moduleInfos: licenseChecker.ModuleInfos) => string;\n};\n\nexport enum DependencyType {\n  Production = 'production',\n  Development = 'development',\n  All = 'all',\n}\n\nexport enum DetailsOutputFormat {\n  JSON = 'json',\n  CSV = 'csv',\n  Markdown = 'markdown',\n}\n\nexport type CheckLicensesOptions = {\n  dependencyType: DependencyType;\n  startPath: string;\n  customFields?: Record<string, any>;\n  clarificationsPath?: string;\n  onlyAllow?: string;\n  detailsOutputPath?: string;\n  excludePackages?: string;\n  excludePackagesStartingWith?: string;\n  detailsOutputFormat: DetailsOutputFormat;\n};\n\nexport interface RunOptions {\n  core: Core;\n  licenseChecker: LicenseChecker;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"02837926b3c5ed3dd50f3f9d40bc6c000a871fe6","contentHash":"576373937cc4451a423e638febcb5dbcc3945ace6a45015572802b486923e053"},"/Users/trevorhuey/code/internal-actions-public/.github/actions/npm-license-checker/src/run.ts":{"path":"/Users/trevorhuey/code/internal-actions-public/.github/actions/npm-license-checker/src/run.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":22}},"4":{"start":{"line":7,"column":13},"end":{"line":7,"column":43}},"5":{"start":{"line":8,"column":15},"end":{"line":8,"column":47}},"6":{"start":{"line":9,"column":16},"end":{"line":9,"column":34}},"7":{"start":{"line":10,"column":24},"end":{"line":10,"column":67}},"8":{"start":{"line":12,"column":4},"end":{"line":73,"column":5}},"9":{"start":{"line":13,"column":31},"end":{"line":13,"column":63}},"10":{"start":{"line":14,"column":26},"end":{"line":14,"column":53}},"11":{"start":{"line":15,"column":33},"end":{"line":15,"column":68}},"12":{"start":{"line":16,"column":35},"end":{"line":16,"column":71}},"13":{"start":{"line":17,"column":26},"end":{"line":17,"column":53}},"14":{"start":{"line":18,"column":34},"end":{"line":18,"column":70}},"15":{"start":{"line":19,"column":36},"end":{"line":19,"column":74}},"16":{"start":{"line":20,"column":32},"end":{"line":20,"column":65}},"17":{"start":{"line":21,"column":44},"end":{"line":21,"column":91}},"18":{"start":{"line":22,"column":8},"end":{"line":25,"column":9}},"19":{"start":{"line":23,"column":12},"end":{"line":23,"column":146}},"20":{"start":{"line":24,"column":12},"end":{"line":24,"column":19}},"21":{"start":{"line":26,"column":8},"end":{"line":29,"column":9}},"22":{"start":{"line":27,"column":12},"end":{"line":27,"column":162}},"23":{"start":{"line":28,"column":12},"end":{"line":28,"column":19}},"24":{"start":{"line":30,"column":8},"end":{"line":33,"column":9}},"25":{"start":{"line":31,"column":12},"end":{"line":31,"column":92}},"26":{"start":{"line":32,"column":12},"end":{"line":32,"column":19}},"27":{"start":{"line":34,"column":8},"end":{"line":37,"column":9}},"28":{"start":{"line":35,"column":12},"end":{"line":35,"column":107}},"29":{"start":{"line":36,"column":12},"end":{"line":36,"column":19}},"30":{"start":{"line":38,"column":8},"end":{"line":41,"column":9}},"31":{"start":{"line":40,"column":12},"end":{"line":40,"column":110}},"32":{"start":{"line":42,"column":27},"end":{"line":47,"column":9}},"33":{"start":{"line":48,"column":8},"end":{"line":57,"column":9}},"34":{"start":{"line":49,"column":12},"end":{"line":56,"column":13}},"35":{"start":{"line":50,"column":44},"end":{"line":50,"column":119}},"36":{"start":{"line":51,"column":16},"end":{"line":51,"column":63}},"37":{"start":{"line":54,"column":16},"end":{"line":54,"column":94}},"38":{"start":{"line":55,"column":16},"end":{"line":55,"column":23}},"39":{"start":{"line":58,"column":23},"end":{"line":68,"column":10}},"40":{"start":{"line":69,"column":8},"end":{"line":69,"column":52}},"41":{"start":{"line":72,"column":8},"end":{"line":72,"column":68}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"run","decl":{"start":{"line":11,"column":15},"end":{"line":11,"column":18}},"loc":{"start":{"line":11,"column":45},"end":{"line":74,"column":1}},"line":11}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":22,"column":8},"end":{"line":25,"column":9}},"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":25,"column":9}},{"start":{},"end":{}}],"line":22},"4":{"loc":{"start":{"line":26,"column":8},"end":{"line":29,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":29,"column":9}},{"start":{},"end":{}}],"line":26},"5":{"loc":{"start":{"line":30,"column":8},"end":{"line":33,"column":9}},"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":33,"column":9}},{"start":{},"end":{}}],"line":30},"6":{"loc":{"start":{"line":34,"column":8},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":37,"column":9}},{"start":{},"end":{}}],"line":34},"7":{"loc":{"start":{"line":34,"column":12},"end":{"line":34,"column":98}},"type":"binary-expr","locations":[{"start":{"line":34,"column":12},"end":{"line":34,"column":28}},{"start":{"line":34,"column":32},"end":{"line":34,"column":98}}],"line":34},"8":{"loc":{"start":{"line":38,"column":8},"end":{"line":41,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":41,"column":9}},{"start":{},"end":{}}],"line":38},"9":{"loc":{"start":{"line":38,"column":12},"end":{"line":39,"column":80}},"type":"binary-expr","locations":[{"start":{"line":38,"column":12},"end":{"line":38,"column":30}},{"start":{"line":39,"column":12},"end":{"line":39,"column":80}}],"line":38},"10":{"loc":{"start":{"line":48,"column":8},"end":{"line":57,"column":9}},"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":57,"column":9}},{"start":{},"end":{}}],"line":48}},"s":{"0":1,"1":3,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0},"f":{"0":3,"1":0},"b":{"0":[1,1,1],"1":[1,2],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/trevorhuey/code/internal-actions-public/.github/actions/npm-license-checker/src/run.ts","sources":["/Users/trevorhuey/code/internal-actions-public/.github/actions/npm-license-checker/src/run.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport { DependencyType, RunOptions, DetailsOutputFormat } from './types';\nimport checkLicenses from './checkLicenses';\n\nexport default async function run({ core, licenseChecker }: RunOptions) {\n  try {\n    const dependencyType = core.getInput('dependency-type') as DependencyType;\n    const startPath = core.getInput('start-path');\n    const customFieldsPath = core.getInput('custom-fields-path');\n    const clarificationsPath = core.getInput('clarifications-path');\n    const onlyAllow = core.getInput('only-allow');\n    const detailsOutputPath = core.getInput('details-output-path');\n    const detailsOutputFormat = core.getInput(\n      'details-output-format'\n    ) as DetailsOutputFormat;\n    const excludePackages = core.getInput('exclude-packages');\n    const excludePackagesStartingWith = core.getInput(\n      'exclude-packages-starting-with'\n    );\n\n    if (!Object.values(DependencyType).includes(dependencyType)) {\n      core.setFailed(\n        `Invalid dependency-type: ${dependencyType}. Allowed values are: ${Object.values(\n          DependencyType\n        ).join(', ')}`\n      );\n      return;\n    }\n\n    if (!Object.values(DetailsOutputFormat).includes(detailsOutputFormat)) {\n      core.setFailed(\n        `Invalid details-output-format: ${detailsOutputFormat}. Allowed values are: ${Object.values(\n          DetailsOutputFormat\n        ).join(', ')}`\n      );\n      return;\n    }\n\n    if (!fs.existsSync(path.resolve(startPath))) {\n      core.setFailed(\n        `The file specified by start-path does not exist: ${startPath}`\n      );\n      return;\n    }\n\n    if (customFieldsPath && !fs.existsSync(path.resolve(customFieldsPath))) {\n      core.setFailed(\n        `The file specified by custom-fields-path does not exist: ${customFieldsPath}`\n      );\n      return;\n    }\n\n    if (\n      clarificationsPath &&\n      !fs.existsSync(path.resolve(clarificationsPath))\n    ) {\n      core.setFailed(\n        `The file specified by clarifications-path does not exist: ${clarificationsPath}`\n      );\n    }\n\n    let customFields: Record<string, any> | undefined = {\n      name: '',\n      version: '',\n      licenses: '',\n      licenseText: '',\n    };\n    if (customFieldsPath) {\n      try {\n        const customFieldsContent = fs.readFileSync(\n          path.resolve(customFieldsPath),\n          'utf8'\n        );\n        customFields = JSON.parse(customFieldsContent);\n      } catch (error) {\n        core.setFailed(\n          `Error reading or parsing customFieldsPath: ${\n            (error as Error).message\n          }`\n        );\n        return;\n      }\n    }\n\n    const result = await checkLicenses(licenseChecker, {\n      startPath,\n      dependencyType,\n      customFields,\n      onlyAllow,\n      detailsOutputPath,\n      excludePackages,\n      excludePackagesStartingWith,\n      detailsOutputFormat,\n      clarificationsPath\n    });\n\n    core.info(licenseChecker.asSummary(result))\n  } catch (error) {\n    core.setFailed(`Error checking licenses: ${(error as Error).message}`);\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5254cc6669fdcacc8660d52d6c1faf41d74b0e74","contentHash":"a8168fbf4285dc4a5dd3f375a3dbcb536d573ef34ab11161ffc5562201facc65"}}