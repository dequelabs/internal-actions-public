"use strict";function cov_4hzw1kh0y(){var path="/Users/trevorhuey/code/internal-actions-public/.github/actions/npm-license-checker/src/checkLicenses.ts";var hash="73f0c185468c02d5dc545115c6e47dfb60d26e98";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/trevorhuey/code/internal-actions-public/.github/actions/npm-license-checker/src/checkLicenses.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:32}},"2":{start:{line:4,column:16},end:{line:4,column:34}},"3":{start:{line:6,column:173},end:{line:6,column:180}},"4":{start:{line:7,column:4},end:{line:29,column:7}},"5":{start:{line:8,column:8},end:{line:28,column:11}},"6":{start:{line:22,column:12},end:{line:27,column:13}},"7":{start:{line:23,column:16},end:{line:23,column:28}},"8":{start:{line:26,column:16},end:{line:26,column:34}}},fnMap:{"0":{name:"checkLicenses",decl:{start:{line:5,column:15},end:{line:5,column:28}},loc:{start:{line:5,column:54},end:{line:30,column:1}},line:5},"1":{name:"(anonymous_1)",decl:{start:{line:7,column:23},end:{line:7,column:24}},loc:{start:{line:7,column:44},end:{line:29,column:5}},line:7},"2":{name:"(anonymous_2)",decl:{start:{line:21,column:11},end:{line:21,column:12}},loc:{start:{line:21,column:30},end:{line:28,column:9}},line:21}},branchMap:{"0":{loc:{start:{line:22,column:12},end:{line:27,column:13}},type:"if",locations:[{start:{line:22,column:12},end:{line:27,column:13}},{start:{line:25,column:17},end:{line:27,column:13}}],line:22}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0]},inputSourceMap:{version:3,file:"/Users/trevorhuey/code/internal-actions-public/.github/actions/npm-license-checker/src/checkLicenses.ts",sources:["/Users/trevorhuey/code/internal-actions-public/.github/actions/npm-license-checker/src/checkLicenses.ts"],names:[],mappings:";;AAEA,gCA0CC;AA5CD,mCAAiH;AAElG,KAAK,UAAU,aAAa,CACzC,cAA8B,EAC9B,OAA6B;IAE7B,MAAM,EACJ,cAAc,EACd,SAAS,EACT,YAAY,EACZ,SAAS,EACT,iBAAiB,EACjB,eAAe,EACf,2BAA2B,EAC3B,mBAAmB,EACnB,kBAAkB,EACnB,GAAG,OAAO,CAAC;IAEZ,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACrC,cAAc,CAAC,IAAI,CACjB;YACE,IAAI,EAAE,mBAAmB,KAAK,2BAAmB,CAAC,IAAI;YACtD,GAAG,EAAE,mBAAmB,KAAK,2BAAmB,CAAC,GAAG;YAEpD,QAAQ,EAAE,mBAAmB,KAAK,2BAAmB,CAAC,QAAQ;YAC9D,KAAK,EAAE,SAAS;YAChB,UAAU,EAAE,cAAc,KAAK,sBAAc,CAAC,UAAU;YACxD,WAAW,EAAE,cAAc,KAAK,sBAAc,CAAC,WAAW;YAC1D,GAAG,EAAE,iBAAiB;YACtB,SAAS;YACT,YAAY,EAAE,YAAY;YAC1B,eAAe;YACf,2BAA2B;YAC3B,kBAAkB,EAAE,kBAAkB;SACvC,EACD,CAAC,GAAG,EAAE,QAAQ,EAAE,EAAE;YAChB,IAAI,GAAG,EAAE,CAAC;gBACR,MAAM,CAAC,GAAG,CAAC,CAAC;YACd,CAAC;iBAAM,CAAC;gBACN,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpB,CAAC;QACH,CAAC,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC",sourcesContent:["import { CheckLicensesOptions, DependencyType, DetailsOutputFormat, LicenseChecker, ModuleInfos } from './types';\n\nexport default async function checkLicenses(\n  licenseChecker: LicenseChecker,\n  options: CheckLicensesOptions\n): Promise<ModuleInfos> {\n  const {\n    dependencyType,\n    startPath,\n    customFields,\n    onlyAllow,\n    detailsOutputPath,\n    excludePackages,\n    excludePackagesStartingWith,\n    detailsOutputFormat,\n    clarificationsPath\n  } = options;\n\n  return new Promise((resolve, reject) => {\n    licenseChecker.init(\n      {\n        json: detailsOutputFormat === DetailsOutputFormat.JSON,\n        csv: detailsOutputFormat === DetailsOutputFormat.CSV,\n        // @ts-ignore\n        markdown: detailsOutputFormat === DetailsOutputFormat.Markdown,\n        start: startPath,\n        production: dependencyType === DependencyType.Production,\n        development: dependencyType === DependencyType.Development,\n        out: detailsOutputPath,\n        onlyAllow,\n        customFormat: customFields,\n        excludePackages,\n        excludePackagesStartingWith,\n        clarificationsFile: clarificationsPath\n      },\n      (err, packages) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(packages);\n        }\n      }\n    );\n  });\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"73f0c185468c02d5dc545115c6e47dfb60d26e98"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_4hzw1kh0y=function(){return actualCoverage;};}return actualCoverage;}cov_4hzw1kh0y();cov_4hzw1kh0y().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_4hzw1kh0y().s[1]++;exports.default=checkLicenses;const types_1=(cov_4hzw1kh0y().s[2]++,require("./types"));async function checkLicenses(licenseChecker,options){cov_4hzw1kh0y().f[0]++;const{dependencyType,startPath,customFields,onlyAllow,detailsOutputPath,excludePackages,excludePackagesStartingWith,detailsOutputFormat,clarificationsPath}=(cov_4hzw1kh0y().s[3]++,options);cov_4hzw1kh0y().s[4]++;return new Promise((resolve,reject)=>{cov_4hzw1kh0y().f[1]++;cov_4hzw1kh0y().s[5]++;licenseChecker.init({json:detailsOutputFormat===types_1.DetailsOutputFormat.JSON,csv:detailsOutputFormat===types_1.DetailsOutputFormat.CSV,markdown:detailsOutputFormat===types_1.DetailsOutputFormat.Markdown,start:startPath,production:dependencyType===types_1.DependencyType.Production,development:dependencyType===types_1.DependencyType.Development,out:detailsOutputPath,onlyAllow,customFormat:customFields,excludePackages,excludePackagesStartingWith,clarificationsFile:clarificationsPath},(err,packages)=>{cov_4hzw1kh0y().f[2]++;cov_4hzw1kh0y().s[6]++;if(err){cov_4hzw1kh0y().b[0][0]++;cov_4hzw1kh0y().s[7]++;reject(err);}else{cov_4hzw1kh0y().b[0][1]++;cov_4hzw1kh0y().s[8]++;resolve(packages);}});});}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3RyZXZvcmh1ZXkvY29kZS9pbnRlcm5hbC1hY3Rpb25zLXB1YmxpYy8uZ2l0aHViL2FjdGlvbnMvbnBtLWxpY2Vuc2UtY2hlY2tlci9zcmMvY2hlY2tMaWNlbnNlcy50cyIsInNvdXJjZXMiOlsiL1VzZXJzL3RyZXZvcmh1ZXkvY29kZS9pbnRlcm5hbC1hY3Rpb25zLXB1YmxpYy8uZ2l0aHViL2FjdGlvbnMvbnBtLWxpY2Vuc2UtY2hlY2tlci9zcmMvY2hlY2tMaWNlbnNlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBLGdDQTBDQztBQTVDRCxtQ0FBaUg7QUFFbEcsS0FBSyxVQUFVLGFBQWEsQ0FDekMsY0FBOEIsRUFDOUIsT0FBNkI7SUFFN0IsTUFBTSxFQUNKLGNBQWMsRUFDZCxTQUFTLEVBQ1QsWUFBWSxFQUNaLFNBQVMsRUFDVCxpQkFBaUIsRUFDakIsZUFBZSxFQUNmLDJCQUEyQixFQUMzQixtQkFBbUIsRUFDbkIsa0JBQWtCLEVBQ25CLEdBQUcsT0FBTyxDQUFDO0lBRVosT0FBTyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsRUFBRTtRQUNyQyxjQUFjLENBQUMsSUFBSSxDQUNqQjtZQUNFLElBQUksRUFBRSxtQkFBbUIsS0FBSywyQkFBbUIsQ0FBQyxJQUFJO1lBQ3RELEdBQUcsRUFBRSxtQkFBbUIsS0FBSywyQkFBbUIsQ0FBQyxHQUFHO1lBRXBELFFBQVEsRUFBRSxtQkFBbUIsS0FBSywyQkFBbUIsQ0FBQyxRQUFRO1lBQzlELEtBQUssRUFBRSxTQUFTO1lBQ2hCLFVBQVUsRUFBRSxjQUFjLEtBQUssc0JBQWMsQ0FBQyxVQUFVO1lBQ3hELFdBQVcsRUFBRSxjQUFjLEtBQUssc0JBQWMsQ0FBQyxXQUFXO1lBQzFELEdBQUcsRUFBRSxpQkFBaUI7WUFDdEIsU0FBUztZQUNULFlBQVksRUFBRSxZQUFZO1lBQzFCLGVBQWU7WUFDZiwyQkFBMkI7WUFDM0Isa0JBQWtCLEVBQUUsa0JBQWtCO1NBQ3ZDLEVBQ0QsQ0FBQyxHQUFHLEVBQUUsUUFBUSxFQUFFLEVBQUU7WUFDaEIsSUFBSSxHQUFHLEVBQUUsQ0FBQztnQkFDUixNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDZCxDQUFDO2lCQUFNLENBQUM7Z0JBQ04sT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ3BCLENBQUM7UUFDSCxDQUFDLENBQ0YsQ0FBQztJQUNKLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoZWNrTGljZW5zZXNPcHRpb25zLCBEZXBlbmRlbmN5VHlwZSwgRGV0YWlsc091dHB1dEZvcm1hdCwgTGljZW5zZUNoZWNrZXIsIE1vZHVsZUluZm9zIH0gZnJvbSAnLi90eXBlcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGNoZWNrTGljZW5zZXMoXG4gIGxpY2Vuc2VDaGVja2VyOiBMaWNlbnNlQ2hlY2tlcixcbiAgb3B0aW9uczogQ2hlY2tMaWNlbnNlc09wdGlvbnNcbik6IFByb21pc2U8TW9kdWxlSW5mb3M+IHtcbiAgY29uc3Qge1xuICAgIGRlcGVuZGVuY3lUeXBlLFxuICAgIHN0YXJ0UGF0aCxcbiAgICBjdXN0b21GaWVsZHMsXG4gICAgb25seUFsbG93LFxuICAgIGRldGFpbHNPdXRwdXRQYXRoLFxuICAgIGV4Y2x1ZGVQYWNrYWdlcyxcbiAgICBleGNsdWRlUGFja2FnZXNTdGFydGluZ1dpdGgsXG4gICAgZGV0YWlsc091dHB1dEZvcm1hdCxcbiAgICBjbGFyaWZpY2F0aW9uc1BhdGhcbiAgfSA9IG9wdGlvbnM7XG5cbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBsaWNlbnNlQ2hlY2tlci5pbml0KFxuICAgICAge1xuICAgICAgICBqc29uOiBkZXRhaWxzT3V0cHV0Rm9ybWF0ID09PSBEZXRhaWxzT3V0cHV0Rm9ybWF0LkpTT04sXG4gICAgICAgIGNzdjogZGV0YWlsc091dHB1dEZvcm1hdCA9PT0gRGV0YWlsc091dHB1dEZvcm1hdC5DU1YsXG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgbWFya2Rvd246IGRldGFpbHNPdXRwdXRGb3JtYXQgPT09IERldGFpbHNPdXRwdXRGb3JtYXQuTWFya2Rvd24sXG4gICAgICAgIHN0YXJ0OiBzdGFydFBhdGgsXG4gICAgICAgIHByb2R1Y3Rpb246IGRlcGVuZGVuY3lUeXBlID09PSBEZXBlbmRlbmN5VHlwZS5Qcm9kdWN0aW9uLFxuICAgICAgICBkZXZlbG9wbWVudDogZGVwZW5kZW5jeVR5cGUgPT09IERlcGVuZGVuY3lUeXBlLkRldmVsb3BtZW50LFxuICAgICAgICBvdXQ6IGRldGFpbHNPdXRwdXRQYXRoLFxuICAgICAgICBvbmx5QWxsb3csXG4gICAgICAgIGN1c3RvbUZvcm1hdDogY3VzdG9tRmllbGRzLFxuICAgICAgICBleGNsdWRlUGFja2FnZXMsXG4gICAgICAgIGV4Y2x1ZGVQYWNrYWdlc1N0YXJ0aW5nV2l0aCxcbiAgICAgICAgY2xhcmlmaWNhdGlvbnNGaWxlOiBjbGFyaWZpY2F0aW9uc1BhdGhcbiAgICAgIH0sXG4gICAgICAoZXJyLCBwYWNrYWdlcykgPT4ge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgcmVqZWN0KGVycik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmVzb2x2ZShwYWNrYWdlcyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICApO1xuICB9KTtcbn1cbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfNGh6dzFraDB5IiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiZXhwb3J0cyIsImRlZmF1bHQiLCJjaGVja0xpY2Vuc2VzIiwidHlwZXNfMSIsInJlcXVpcmUiLCJsaWNlbnNlQ2hlY2tlciIsIm9wdGlvbnMiLCJmIiwiZGVwZW5kZW5jeVR5cGUiLCJzdGFydFBhdGgiLCJjdXN0b21GaWVsZHMiLCJvbmx5QWxsb3ciLCJkZXRhaWxzT3V0cHV0UGF0aCIsImV4Y2x1ZGVQYWNrYWdlcyIsImV4Y2x1ZGVQYWNrYWdlc1N0YXJ0aW5nV2l0aCIsImRldGFpbHNPdXRwdXRGb3JtYXQiLCJjbGFyaWZpY2F0aW9uc1BhdGgiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImluaXQiLCJqc29uIiwiRGV0YWlsc091dHB1dEZvcm1hdCIsIkpTT04iLCJjc3YiLCJDU1YiLCJtYXJrZG93biIsIk1hcmtkb3duIiwic3RhcnQiLCJwcm9kdWN0aW9uIiwiRGVwZW5kZW5jeVR5cGUiLCJQcm9kdWN0aW9uIiwiZGV2ZWxvcG1lbnQiLCJEZXZlbG9wbWVudCIsIm91dCIsImN1c3RvbUZvcm1hdCIsImNsYXJpZmljYXRpb25zRmlsZSIsImVyciIsInBhY2thZ2VzIiwiYiJdLCJzb3VyY2VzIjpbIi9Vc2Vycy90cmV2b3JodWV5L2NvZGUvaW50ZXJuYWwtYWN0aW9ucy1wdWJsaWMvLmdpdGh1Yi9hY3Rpb25zL25wbS1saWNlbnNlLWNoZWNrZXIvc3JjL2NoZWNrTGljZW5zZXMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hlY2tMaWNlbnNlc09wdGlvbnMsIERlcGVuZGVuY3lUeXBlLCBEZXRhaWxzT3V0cHV0Rm9ybWF0LCBMaWNlbnNlQ2hlY2tlciwgTW9kdWxlSW5mb3MgfSBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gY2hlY2tMaWNlbnNlcyhcbiAgbGljZW5zZUNoZWNrZXI6IExpY2Vuc2VDaGVja2VyLFxuICBvcHRpb25zOiBDaGVja0xpY2Vuc2VzT3B0aW9uc1xuKTogUHJvbWlzZTxNb2R1bGVJbmZvcz4ge1xuICBjb25zdCB7XG4gICAgZGVwZW5kZW5jeVR5cGUsXG4gICAgc3RhcnRQYXRoLFxuICAgIGN1c3RvbUZpZWxkcyxcbiAgICBvbmx5QWxsb3csXG4gICAgZGV0YWlsc091dHB1dFBhdGgsXG4gICAgZXhjbHVkZVBhY2thZ2VzLFxuICAgIGV4Y2x1ZGVQYWNrYWdlc1N0YXJ0aW5nV2l0aCxcbiAgICBkZXRhaWxzT3V0cHV0Rm9ybWF0LFxuICAgIGNsYXJpZmljYXRpb25zUGF0aFxuICB9ID0gb3B0aW9ucztcblxuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGxpY2Vuc2VDaGVja2VyLmluaXQoXG4gICAgICB7XG4gICAgICAgIGpzb246IGRldGFpbHNPdXRwdXRGb3JtYXQgPT09IERldGFpbHNPdXRwdXRGb3JtYXQuSlNPTixcbiAgICAgICAgY3N2OiBkZXRhaWxzT3V0cHV0Rm9ybWF0ID09PSBEZXRhaWxzT3V0cHV0Rm9ybWF0LkNTVixcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICBtYXJrZG93bjogZGV0YWlsc091dHB1dEZvcm1hdCA9PT0gRGV0YWlsc091dHB1dEZvcm1hdC5NYXJrZG93bixcbiAgICAgICAgc3RhcnQ6IHN0YXJ0UGF0aCxcbiAgICAgICAgcHJvZHVjdGlvbjogZGVwZW5kZW5jeVR5cGUgPT09IERlcGVuZGVuY3lUeXBlLlByb2R1Y3Rpb24sXG4gICAgICAgIGRldmVsb3BtZW50OiBkZXBlbmRlbmN5VHlwZSA9PT0gRGVwZW5kZW5jeVR5cGUuRGV2ZWxvcG1lbnQsXG4gICAgICAgIG91dDogZGV0YWlsc091dHB1dFBhdGgsXG4gICAgICAgIG9ubHlBbGxvdyxcbiAgICAgICAgY3VzdG9tRm9ybWF0OiBjdXN0b21GaWVsZHMsXG4gICAgICAgIGV4Y2x1ZGVQYWNrYWdlcyxcbiAgICAgICAgZXhjbHVkZVBhY2thZ2VzU3RhcnRpbmdXaXRoLFxuICAgICAgICBjbGFyaWZpY2F0aW9uc0ZpbGU6IGNsYXJpZmljYXRpb25zUGF0aFxuICAgICAgfSxcbiAgICAgIChlcnIsIHBhY2thZ2VzKSA9PiB7XG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICByZWplY3QoZXJyKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXNvbHZlKHBhY2thZ2VzKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICk7XG4gIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiaXhJQTZCUTtBQUFBQSxhQUFBLFNBQUFBLENBQUEsU0FBQUMsY0FBQSxXQUFBQSxjQUFBLEVBQUFELGFBQUEsR0FBQUEsYUFBQSxHQUFBRSxDQUFBLE0sZ0ZBM0JSQyxPQUFBLENBQUFDLE9BQUEsQ0FBQUMsYUFBQSxDQUZBLE1BQUFDLE9BQUEsRUFBQU4sYUFBQSxHQUFBRSxDQUFBLE1BQUFLLE9BQUEsYUFFZSxjQUFlLENBQUFGLGFBQWFBLENBQ3pDRyxjQUE4QixDQUM5QkMsT0FBNkIsRUFBQVQsYUFBQSxHQUFBVSxDQUFBLE1BRTdCLEtBQU0sQ0FDSkMsY0FBYyxDQUNkQyxTQUFTLENBQ1RDLFlBQVksQ0FDWkMsU0FBUyxDQUNUQyxpQkFBaUIsQ0FDakJDLGVBQWUsQ0FDZkMsMkJBQTJCLENBQzNCQyxtQkFBbUIsQ0FDbkJDLGtCQUFrQixDQUNuQixFQUFBbkIsYUFBQSxHQUFBRSxDQUFBLE1BQUdPLE9BQU8sRUFBQ1QsYUFBQSxHQUFBRSxDQUFBLE1BRVosTUFBTyxJQUFJLENBQUFrQixPQUFPLENBQUMsQ0FBQ0MsT0FBTyxDQUFFQyxNQUFNLEdBQUksQ0FBQXRCLGFBQUEsR0FBQVUsQ0FBQSxNQUFBVixhQUFBLEdBQUFFLENBQUEsTUFDckNNLGNBQWMsQ0FBQ2UsSUFBSSxDQUNqQixDQUNFQyxJQUFJLENBQUVOLG1CQUFtQixHQUFLWixPQUFBLENBQUFtQixtQkFBbUIsQ0FBQ0MsSUFBSSxDQUN0REMsR0FBRyxDQUFFVCxtQkFBbUIsR0FBS1osT0FBQSxDQUFBbUIsbUJBQW1CLENBQUNHLEdBQUcsQ0FFcERDLFFBQVEsQ0FBRVgsbUJBQW1CLEdBQUtaLE9BQUEsQ0FBQW1CLG1CQUFtQixDQUFDSyxRQUFRLENBQzlEQyxLQUFLLENBQUVuQixTQUFTLENBQ2hCb0IsVUFBVSxDQUFFckIsY0FBYyxHQUFLTCxPQUFBLENBQUEyQixjQUFjLENBQUNDLFVBQVUsQ0FDeERDLFdBQVcsQ0FBRXhCLGNBQWMsR0FBS0wsT0FBQSxDQUFBMkIsY0FBYyxDQUFDRyxXQUFXLENBQzFEQyxHQUFHLENBQUV0QixpQkFBaUIsQ0FDdEJELFNBQVMsQ0FDVHdCLFlBQVksQ0FBRXpCLFlBQVksQ0FDMUJHLGVBQWUsQ0FDZkMsMkJBQTJCLENBQzNCc0Isa0JBQWtCLENBQUVwQixrQixDQUNyQixDQUNELENBQUNxQixHQUFHLENBQUVDLFFBQVEsR0FBSSxDQUFBekMsYUFBQSxHQUFBVSxDQUFBLE1BQUFWLGFBQUEsR0FBQUUsQ0FBQSxNQUNoQixHQUFJc0MsR0FBRyxDQUFFLENBQUF4QyxhQUFBLEdBQUEwQyxDQUFBLFNBQUExQyxhQUFBLEdBQUFFLENBQUEsTUFDUG9CLE1BQU0sQ0FBQ2tCLEdBQUcsQ0FBQyxDQUNiLENBQUMsSUFBTSxDQUFBeEMsYUFBQSxHQUFBMEMsQ0FBQSxTQUFBMUMsYUFBQSxHQUFBRSxDQUFBLE1BQ0xtQixPQUFPLENBQUNvQixRQUFRLENBQUMsQ0FDbkIsQ0FDRixDQUFDLENBQ0YsQ0FDSCxDQUFDLENBQUMsQ0FDSixDIiwiaWdub3JlTGlzdCI6W119