{"version":3,"file":"/Users/trevorhuey/code/internal-actions-public/.github/actions/npm-license-checker/src/checkLicenses.ts","sources":["/Users/trevorhuey/code/internal-actions-public/.github/actions/npm-license-checker/src/checkLicenses.ts"],"names":[],"mappings":";;AAEA,gCA0CC;AA5CD,mCAAiH;AAElG,KAAK,UAAU,aAAa,CACzC,cAA8B,EAC9B,OAA6B;IAE7B,MAAM,EACJ,cAAc,EACd,SAAS,EACT,YAAY,EACZ,SAAS,EACT,iBAAiB,EACjB,eAAe,EACf,2BAA2B,EAC3B,mBAAmB,EACnB,kBAAkB,EACnB,GAAG,OAAO,CAAC;IAEZ,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACrC,cAAc,CAAC,IAAI,CACjB;YACE,IAAI,EAAE,mBAAmB,KAAK,2BAAmB,CAAC,IAAI;YACtD,GAAG,EAAE,mBAAmB,KAAK,2BAAmB,CAAC,GAAG;YAEpD,QAAQ,EAAE,mBAAmB,KAAK,2BAAmB,CAAC,QAAQ;YAC9D,KAAK,EAAE,SAAS;YAChB,UAAU,EAAE,cAAc,KAAK,sBAAc,CAAC,UAAU;YACxD,WAAW,EAAE,cAAc,KAAK,sBAAc,CAAC,WAAW;YAC1D,GAAG,EAAE,iBAAiB;YACtB,SAAS;YACT,YAAY,EAAE,YAAY;YAC1B,eAAe;YACf,2BAA2B;YAC3B,kBAAkB,EAAE,kBAAkB;SACvC,EACD,CAAC,GAAG,EAAE,QAAQ,EAAE,EAAE;YAChB,IAAI,GAAG,EAAE,CAAC;gBACR,MAAM,CAAC,GAAG,CAAC,CAAC;YACd,CAAC;iBAAM,CAAC;gBACN,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpB,CAAC;QACH,CAAC,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["import { CheckLicensesOptions, DependencyType, DetailsOutputFormat, LicenseChecker, ModuleInfos } from './types';\n\nexport default async function checkLicenses(\n  licenseChecker: LicenseChecker,\n  options: CheckLicensesOptions\n): Promise<ModuleInfos> {\n  const {\n    dependencyType,\n    startPath,\n    customFields,\n    onlyAllow,\n    detailsOutputPath,\n    excludePackages,\n    excludePackagesStartingWith,\n    detailsOutputFormat,\n    clarificationsPath\n  } = options;\n\n  return new Promise((resolve, reject) => {\n    licenseChecker.init(\n      {\n        json: detailsOutputFormat === DetailsOutputFormat.JSON,\n        csv: detailsOutputFormat === DetailsOutputFormat.CSV,\n        // @ts-ignore\n        markdown: detailsOutputFormat === DetailsOutputFormat.Markdown,\n        start: startPath,\n        production: dependencyType === DependencyType.Production,\n        development: dependencyType === DependencyType.Development,\n        out: detailsOutputPath,\n        onlyAllow,\n        customFormat: customFields,\n        excludePackages,\n        excludePackagesStartingWith,\n        clarificationsFile: clarificationsPath\n      },\n      (err, packages) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(packages);\n        }\n      }\n    );\n  });\n}\n"]}